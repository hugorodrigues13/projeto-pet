{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/Projetos/Sistema de Pet/frontend/src/components/pages/Pet/AddPet.js\",\n    _s = $RefreshSig$();\n\nimport api from '../../../utils/api';\nimport styles from './AddPet.module.css';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n/*components*/\n\nimport PetForm from '../../form/PetForm';\n/* hooks */\n\nimport useFlashMessage from '../../../hooks/useFlashMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPet() {\n  _s();\n\n  const [token] = useState(localStorage.getItem('token') || '');\n  const {\n    setFlashMessage\n  } = useFlashMessage();\n  const history = useHistory();\n\n  async function registerPet(pet) {\n    let msgType = 'success';\n    const formData = new FormData();\n    await Object.keys(pet).forEach(key => {\n      if (key === 'images') {\n        for (let i = 0; i < pet[key].length; i++) {\n          formData.append('images', pet[key][i]);\n        }\n      } else {\n        formData.append(key, pet[key]);\n      }\n    }).then().catch(err => {\n      msgType = 'error';\n    });\n    const data = await api.post('pets/create', formData, {\n      Authorization: `Bearer ${JSON.parser(token)}`,\n      'Content-Type': 'multipart/form-data'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.addpet_header,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastre um Pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Depois ele ficar\\xE1 dispon\\xEDvel para ado\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PetForm, {\n      handleSubmit: registerPet,\n      btnText: \"Cadastrar Pet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddPet, \"u9Eo1PGlSEhsCzfwJJJsAFPSdNg=\", false, function () {\n  return [useFlashMessage, useHistory];\n});\n\n_c = AddPet;\nexport default AddPet;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPet\");","map":{"version":3,"names":["api","styles","useState","useHistory","PetForm","useFlashMessage","AddPet","token","localStorage","getItem","setFlashMessage","history","registerPet","pet","msgType","formData","FormData","Object","keys","forEach","key","i","length","append","then","catch","err","data","post","Authorization","JSON","parser","addpet_header"],"sources":["/home/dev/Área de Trabalho/Projetos/Sistema de Pet/frontend/src/components/pages/Pet/AddPet.js"],"sourcesContent":["import api from '../../../utils/api';\nimport styles from './AddPet.module.css';\n\nimport {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\n\n/*components*/\nimport PetForm from '../../form/PetForm'\n\n/* hooks */\nimport useFlashMessage from '../../../hooks/useFlashMessage';\n\nfunction AddPet(){\n    const [token] = useState(localStorage.getItem('token') || '')\n    const {setFlashMessage} = useFlashMessage()\n    const history = useHistory()\n\n    async function registerPet(pet){\n        let msgType = 'success'\n        \n        const formData = new FormData\n\n        await Object.keys(pet).forEach((key) => {\n          if (key === 'images') {\n             for(let i = 0; i < pet[key].length; i++){\n                (formData.append('images', pet[key][i]))\n             }\n          }else{\n            (formData.append(key, pet[key]))\n          }\n        })\n        .then()\n        .catch((err) => {\n            msgType = 'error'\n        })\n\n        const data = await api.post('pets/create', formData, {\n            Authorization: `Bearer ${JSON.parser(token)}`,\n            'Content-Type': 'multipart/form-data'\n        })\n\n    }\n    return(\n        <section className={styles.addpet_header}>\n            <div>\n                <h1>Cadastre um Pet</h1>\n                <p>Depois ele ficará disponível para adoção</p>\n            </div>\n            <PetForm handleSubmit={registerPet} btnText=\"Cadastrar Pet\"/>\n        </section>\n    )\n\n}\n\nexport default AddPet"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA;;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;;AAEA,SAASC,MAAT,GAAiB;EAAA;;EACb,MAAM,CAACC,KAAD,IAAUL,QAAQ,CAACM,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAAlC,CAAxB;EACA,MAAM;IAACC;EAAD,IAAoBL,eAAe,EAAzC;EACA,MAAMM,OAAO,GAAGR,UAAU,EAA1B;;EAEA,eAAeS,WAAf,CAA2BC,GAA3B,EAA+B;IAC3B,IAAIC,OAAO,GAAG,SAAd;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IAEA,MAAMC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,OAAjB,CAA0BC,GAAD,IAAS;MACtC,IAAIA,GAAG,KAAK,QAAZ,EAAsB;QACnB,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,GAAG,CAACO,GAAD,CAAH,CAASE,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;UACpCN,QAAQ,CAACQ,MAAT,CAAgB,QAAhB,EAA0BV,GAAG,CAACO,GAAD,CAAH,CAASC,CAAT,CAA1B,CAAD;QACF;MACH,CAJD,MAIK;QACFN,QAAQ,CAACQ,MAAT,CAAgBH,GAAhB,EAAqBP,GAAG,CAACO,GAAD,CAAxB,CAAD;MACD;IACF,CARK,EASLI,IATK,GAULC,KAVK,CAUEC,GAAD,IAAS;MACZZ,OAAO,GAAG,OAAV;IACH,CAZK,CAAN;IAcA,MAAMa,IAAI,GAAG,MAAM3B,GAAG,CAAC4B,IAAJ,CAAS,aAAT,EAAwBb,QAAxB,EAAkC;MACjDc,aAAa,EAAG,UAASC,IAAI,CAACC,MAAL,CAAYxB,KAAZ,CAAmB,EADK;MAEjD,gBAAgB;IAFiC,CAAlC,CAAnB;EAKH;;EACD,oBACI;IAAS,SAAS,EAAEN,MAAM,CAAC+B,aAA3B;IAAA,wBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI,QAAC,OAAD;MAAS,YAAY,EAAEpB,WAAvB;MAAoC,OAAO,EAAC;IAA5C;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAxCQN,M;UAEqBD,e,EACVF,U;;;KAHXG,M;AA0CT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}