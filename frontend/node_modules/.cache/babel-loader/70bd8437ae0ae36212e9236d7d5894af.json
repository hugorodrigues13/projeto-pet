{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/Projetos/Sistema de Pet/frontend/src/components/pages/Pet/EditPet.js\",\n    _s = $RefreshSig$();\n\nimport api from '../../../utils/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport styles from './AddPet.module.css';\nimport PetForm from '../../form/PetForm';\nimport useFlashMessage from '../../../hooks/useFlashMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPet() {\n  _s();\n\n  const [pet, setPet] = useState({});\n  const [token] = useState(localStorage.getItem('token') || '');\n  const {\n    id\n  } = useParams();\n  const {\n    setFlashMessage\n  } = useFlashMessage();\n  useEffect(() => {\n    console.log(token);\n    api.get(`/pets/${id}`, {\n      Authorization: `Bearer ${JSON.parse(token)}`\n    }).then(response => {\n      setPet(response.data.pet);\n    });\n  }, [token, id]);\n\n  async function updatePet(pet) {\n    let msgType = 'success';\n    const formData = new FormData();\n    await Object.keys(pet).forEach(key => {\n      if (key === 'images') {\n        for (let i = 0; i < pet[key].length; i++) {\n          formData.append('images', pet[key][i]);\n        }\n      } else {\n        formData.append(key, pet[key]);\n      }\n    });\n    const data = await api.patch(`pets/${pet._id}`, formData, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(err => {\n      msgType = 'error';\n      return err.response.data;\n    });\n    setFlashMessage(data.message, msgType);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addpet_header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Editando o Pet: \", pet.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Depois da edi\\xE7\\xE3o os dados ser\\xE3o atualizados no sistema\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), pet.name && /*#__PURE__*/_jsxDEV(PetForm, {\n      handleSubmit: updatePet,\n      btnText: \"Atualizar\",\n      petData: pet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditPet, \"4i9mZDaabzOdistW2w7SlaGiBA0=\", false, function () {\n  return [useParams, useFlashMessage];\n});\n\n_c = EditPet;\nexport default EditPet;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPet\");","map":{"version":3,"names":["api","useParams","useState","useEffect","styles","PetForm","useFlashMessage","EditPet","pet","setPet","token","localStorage","getItem","id","setFlashMessage","console","log","get","Authorization","JSON","parse","then","response","data","updatePet","msgType","formData","FormData","Object","keys","forEach","key","i","length","append","patch","_id","headers","catch","err","message","addpet_header","name"],"sources":["/home/dev/Área de Trabalho/Projetos/Sistema de Pet/frontend/src/components/pages/Pet/EditPet.js"],"sourcesContent":["import api from '../../../utils/api'\nimport { useParams } from 'react-router-dom'\nimport {useState, useEffect} from 'react'\n\nimport styles from './AddPet.module.css'\n\nimport PetForm from '../../form/PetForm'\n\nimport useFlashMessage from '../../../hooks/useFlashMessage'\n\nfunction EditPet(){\n    const [pet, setPet] = useState({})\n    const [token] = useState(localStorage.getItem('token') || '')\n    const {id} = useParams()\n    const {setFlashMessage} = useFlashMessage()\n\n    useEffect(() => {\n        console.log(token)\n        api.get(`/pets/${id}`, {\n            Authorization: `Bearer ${JSON.parse(token)}`\n        }).then((response) => {\n            setPet(response.data.pet)\n        })\n\n    },[token, id])\n\n    async function updatePet(pet){\n        let msgType = 'success'\n\n        const formData = new FormData()\n\n        await Object.keys(pet).forEach((key) => {\n            if(key === 'images') {\n                for(let i = 0; i < pet[key].length; i++){\n                    formData.append('images', pet[key][i])\n                }\n            \n            } else {\n                formData.append(key, pet[key])\n            }\n        })\n\n        const data = await api.patch(`pets/${pet._id}`, formData, {\n            headers: {\n                Authorization: `Bearer ${JSON.parse(token)}`,\n                'Content-Type': 'multipart/form-data'\n            },\n        })\n        .then((response) => {\n            return response.data\n        })\n        .catch((err) => {\n            msgType = 'error'\n            return err.response.data\n        })\n\n        setFlashMessage(data.message, msgType)\n    }\n\n    return(\n        <section>\n            <div className={styles.addpet_header}></div>\n            <h1>Editando o Pet: {pet.name}</h1>\n            <p>Depois da edição os dados serão atualizados no sistema</p>\n            {pet.name && (\n                <PetForm handleSubmit={updatePet} btnText=\"Atualizar\" petData={pet} />\n            )}\n        </section>\n    )\n\n}\n\nexport default EditPet"],"mappings":"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"},"metadata":{},"sourceType":"module"}